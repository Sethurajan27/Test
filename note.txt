import random
import string
import requests
import urllib3
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

class MailTMClient:
    def __init__(self):
        self.base_url = "https://api.mail.tm"
        self.session = requests.Session()
        self.account = self.create_account()
        self.token = self.get_token()

    def create_account(self):
        domain_resp = self.session.get(f'{self.base_url}/domains', verify=False)
        domain_data = domain_resp.json()
        domain = domain_data['hydra:member'][0]['domain']

        username = ''.join(random.choices(string.ascii_lowercase, k=10))
        password = ''.join(random.choices(string.ascii_letters + string.digits, k=12))
        email = f"{username}@{domain}"
        data = {
            "address": email,
            "password": password
        }

        response = self.session.post(f'{self.base_url}/accounts', json=data, verify=False)

        # üîç Log response for debugging
        print("Mail.tm Account Creation Response:")
        print(response.text)

        if response.status_code != 201:
            raise Exception(f"Mail.tm account creation failed: {response.status_code} - {response.text}")

        return {
            "address": email,
            "password": password
        }

    def get_token(self):
        data = {
            "address": self.account["address"],
            "password": self.account["password"]
        }
        response = self.session.post(f'{self.base_url}/token', json=data, verify=False)

        print("Token Response:")
        print(response.text)

        if response.status_code != 200:
            raise Exception(f"Token fetch failed: {response.status_code} - {response.text}")

        return response.json()['token']








git add src/mailtm_client.py
git commit -m "üîß Add debug logging for Mail.tm account creation"
git push origin main
